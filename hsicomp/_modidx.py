# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/hsicomp',
                'doc_host': 'https://ninjalabo.github.io',
                'git_url': 'https://github.com/ninjalabo/hsicomp',
                'lib_path': 'hsicomp'},
  'syms': { 'hsicomp.ARAD1K.setup': {'hsicomp.ARAD1K.setup.foo': ('arad1k_setup.html#foo', 'hsicomp/ARAD1K/setup.py')},
            'hsicomp.HySpecNet11k_inference': { 'hsicomp.HySpecNet11k_inference.analyze_results': ( 'hyspecnet11k_inference_sscnet.html#analyze_results',
                                                                                                    'hsicomp/HySpecNet11k_inference.py'),
                                                'hsicomp.HySpecNet11k_inference.collect_tif_files': ( 'hyspecnet11k_inference_sscnet.html#collect_tif_files',
                                                                                                      'hsicomp/HySpecNet11k_inference.py'),
                                                'hsicomp.HySpecNet11k_inference.enhance_image': ( 'hyspecnet11k_inference_sscnet.html#enhance_image',
                                                                                                  'hsicomp/HySpecNet11k_inference.py'),
                                                'hsicomp.HySpecNet11k_inference.foo': ( 'hyspecnet11k_inference_sscnet.html#foo',
                                                                                        'hsicomp/HySpecNet11k_inference.py'),
                                                'hsicomp.HySpecNet11k_inference.is_mostly_blank': ( 'hyspecnet11k_inference_sscnet.html#is_mostly_blank',
                                                                                                    'hsicomp/HySpecNet11k_inference.py'),
                                                'hsicomp.HySpecNet11k_inference.main': ( 'hyspecnet11k_inference_sscnet.html#main',
                                                                                         'hsicomp/HySpecNet11k_inference.py'),
                                                'hsicomp.HySpecNet11k_inference.process_and_display_images': ( 'hyspecnet11k_inference_sscnet.html#process_and_display_images',
                                                                                                               'hsicomp/HySpecNet11k_inference.py')},
            'hsicomp.SSCNetPruning': { 'hsicomp.SSCNetPruning.evaluate_model': ( 'hyspecnet11k_sscnet_pruning.html#evaluate_model',
                                                                                 'hsicomp/SSCNetPruning.py'),
                                       'hsicomp.SSCNetPruning.foo': ('hyspecnet11k_sscnet_pruning.html#foo', 'hsicomp/SSCNetPruning.py'),
                                       'hsicomp.SSCNetPruning.sparsify_model': ( 'hyspecnet11k_sscnet_pruning.html#sparsify_model',
                                                                                 'hsicomp/SSCNetPruning.py')},
            'hsicomp.SSCNetPruningCompression': { 'hsicomp.SSCNetPruningCompression.foo': ( 'sscnet_pruning.html#foo',
                                                                                            'hsicomp/SSCNetPruningCompression.py')},
            'hsicomp.SSCNetStaticQuantization': { 'hsicomp.SSCNetStaticQuantization.analyze_results': ( 'sscnet_compression.html#analyze_results',
                                                                                                        'hsicomp/SSCNetStaticQuantization.py'),
                                                  'hsicomp.SSCNetStaticQuantization.foo': ( 'sscnet_compression.html#foo',
                                                                                            'hsicomp/SSCNetStaticQuantization.py')},
            'hsicomp.SSCNet_Static_Quantization': { 'hsicomp.SSCNet_Static_Quantization.NPYDataset': ( 'hyspecnet11k_sscnet_compression.html#npydataset',
                                                                                                       'hsicomp/SSCNet_Static_Quantization.py'),
                                                    'hsicomp.SSCNet_Static_Quantization.NPYDataset.__getitem__': ( 'hyspecnet11k_sscnet_compression.html#npydataset.__getitem__',
                                                                                                                   'hsicomp/SSCNet_Static_Quantization.py'),
                                                    'hsicomp.SSCNet_Static_Quantization.NPYDataset.__init__': ( 'hyspecnet11k_sscnet_compression.html#npydataset.__init__',
                                                                                                                'hsicomp/SSCNet_Static_Quantization.py'),
                                                    'hsicomp.SSCNet_Static_Quantization.NPYDataset.__len__': ( 'hyspecnet11k_sscnet_compression.html#npydataset.__len__',
                                                                                                               'hsicomp/SSCNet_Static_Quantization.py'),
                                                    'hsicomp.SSCNet_Static_Quantization.create_dataloaders': ( 'hyspecnet11k_sscnet_compression.html#create_dataloaders',
                                                                                                               'hsicomp/SSCNet_Static_Quantization.py'),
                                                    'hsicomp.SSCNet_Static_Quantization.foo': ( 'hyspecnet11k_sscnet_compression.html#foo',
                                                                                                'hsicomp/SSCNet_Static_Quantization.py'),
                                                    'hsicomp.SSCNet_Static_Quantization.load_paths': ( 'hyspecnet11k_sscnet_compression.html#load_paths',
                                                                                                       'hsicomp/SSCNet_Static_Quantization.py'),
                                                    'hsicomp.SSCNet_Static_Quantization.load_pretrained_weights': ( 'hyspecnet11k_sscnet_compression.html#load_pretrained_weights',
                                                                                                                    'hsicomp/SSCNet_Static_Quantization.py'),
                                                    'hsicomp.SSCNet_Static_Quantization.measure_inference_time': ( 'hyspecnet11k_sscnet_compression.html#measure_inference_time',
                                                                                                                   'hsicomp/SSCNet_Static_Quantization.py'),
                                                    'hsicomp.SSCNet_Static_Quantization.measure_vram_usage': ( 'hyspecnet11k_sscnet_compression.html#measure_vram_usage',
                                                                                                               'hsicomp/SSCNet_Static_Quantization.py'),
                                                    'hsicomp.SSCNet_Static_Quantization.transform_sample': ( 'hyspecnet11k_sscnet_compression.html#transform_sample',
                                                                                                             'hsicomp/SSCNet_Static_Quantization.py')},
            'hsicomp.core': {'hsicomp.core.foo': ('hyspecnet11k_quantization.html#foo', 'hsicomp/core.py')},
            'hsicomp.dynamic_quantization': { 'hsicomp.dynamic_quantization.apply_dynamic_quantization': ( 'dynamic_quantization.html#apply_dynamic_quantization',
                                                                                                           'hsicomp/dynamic_quantization.py'),
                                              'hsicomp.dynamic_quantization.evaluate_latency': ( 'dynamic_quantization.html#evaluate_latency',
                                                                                                 'hsicomp/dynamic_quantization.py'),
                                              'hsicomp.dynamic_quantization.evaluate_model': ( 'dynamic_quantization.html#evaluate_model',
                                                                                               'hsicomp/dynamic_quantization.py'),
                                              'hsicomp.dynamic_quantization.evaluate_ssim': ( 'dynamic_quantization.html#evaluate_ssim',
                                                                                              'hsicomp/dynamic_quantization.py'),
                                              'hsicomp.dynamic_quantization.foo': ( 'dynamic_quantization.html#foo',
                                                                                    'hsicomp/dynamic_quantization.py'),
                                              'hsicomp.dynamic_quantization.get_model_size': ( 'dynamic_quantization.html#get_model_size',
                                                                                               'hsicomp/dynamic_quantization.py'),
                                              'hsicomp.dynamic_quantization.load_model_with_weights': ( 'dynamic_quantization.html#load_model_with_weights',
                                                                                                        'hsicomp/dynamic_quantization.py'),
                                              'hsicomp.dynamic_quantization.save_model': ( 'dynamic_quantization.html#save_model',
                                                                                           'hsicomp/dynamic_quantization.py')},
            'hsicomp.fasterai_pruning': { 'hsicomp.fasterai_pruning.foo': ('pruning_fasterai.html#foo', 'hsicomp/fasterai_pruning.py'),
                                          'hsicomp.fasterai_pruning.load_model_with_weights': ( 'pruning_fasterai.html#load_model_with_weights',
                                                                                                'hsicomp/fasterai_pruning.py')},
            'hsicomp.hyspecnet11k.setup': { 'hsicomp.hyspecnet11k.setup.foo': ( 'hyspecnet11k_setup.html#foo',
                                                                                'hsicomp/hyspecnet11k/setup.py')},
            'hsicomp.pruning': { 'hsicomp.pruning.apply_pruning_and_finalize': ( 'compression_pruning.html#apply_pruning_and_finalize',
                                                                                 'hsicomp/pruning.py'),
                                 'hsicomp.pruning.evaluate_model': ('compression_pruning.html#evaluate_model', 'hsicomp/pruning.py'),
                                 'hsicomp.pruning.finalize_pruned_model': ( 'compression_pruning.html#finalize_pruned_model',
                                                                            'hsicomp/pruning.py'),
                                 'hsicomp.pruning.foo': ('compression_pruning.html#foo', 'hsicomp/pruning.py'),
                                 'hsicomp.pruning.load_model_with_weights': ( 'compression_pruning.html#load_model_with_weights',
                                                                              'hsicomp/pruning.py')},
            'hsicomp.static_quantization': { 'hsicomp.static_quantization.apply_static_quantization': ( 'static_quantization.html#apply_static_quantization',
                                                                                                        'hsicomp/static_quantization.py'),
                                             'hsicomp.static_quantization.evaluate_latency': ( 'static_quantization.html#evaluate_latency',
                                                                                               'hsicomp/static_quantization.py'),
                                             'hsicomp.static_quantization.evaluate_model': ( 'static_quantization.html#evaluate_model',
                                                                                             'hsicomp/static_quantization.py'),
                                             'hsicomp.static_quantization.evaluate_ssim': ( 'static_quantization.html#evaluate_ssim',
                                                                                            'hsicomp/static_quantization.py'),
                                             'hsicomp.static_quantization.foo': ( 'static_quantization.html#foo',
                                                                                  'hsicomp/static_quantization.py'),
                                             'hsicomp.static_quantization.load_model_with_weights': ( 'static_quantization.html#load_model_with_weights',
                                                                                                      'hsicomp/static_quantization.py')}}}
